name: Build Expo App

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [android]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10


      - name: Setup Java (for Android builds)
        if: matrix.platform == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

#      - name: Setup Xcode (for iOS builds)
#        if: matrix.platform == 'ios' && runner.os == 'macOS'
#        uses: maxim-lobanov/setup-xcode@v1
#        with:
#          xcode-version: 'latest-stable'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Expo CLI
        run: pnpm install -g @expo/cli@latest

      - name: Setup EAS CLI
        run: pnpm install -g eas-cli@latest

      - name: Authenticate with Expo
        run: |
          echo "$EXPO_TOKEN" | eas login --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Configure EAS Build
        run: |
          if [ ! -f eas.json ]; then
            eas build:configure --platform android --non-interactive
          fi

      - name: Install Android SDK (for Android builds)
        if: matrix.platform == 'android'
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0
          ndk-version: 25.1.8937393

      - name: Setup Android NDK
        if: matrix.platform == 'android'
        run: |
          echo "ANDROID_NDK_ROOT=$ANDROID_NDK_LATEST_HOME" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_LATEST_HOME" >> $GITHUB_ENV

      - name: Pre-build setup
        run: |
          # Clear any existing builds
          npx expo install --fix

          # Generate native code if using development build
          if grep -q '"developmentClient"' app.json app.config.js 2>/dev/null; then
            npx expo prebuild --clean --platform ${{ matrix.platform }}
          fi

      - name: Build for Android
        if: matrix.platform == 'android'
        run: |
          eas build --platform android --local --non-interactive --clear-cache
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

#      - name: Build for iOS
#        if: matrix.platform == 'ios'
#        run: |
#          eas build --platform ios --local --non-interactive --clear-cache
#        env:
#          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: |
            **/*.apk
            **/*.aab
            **/*.ipa
          retention-days: 30

